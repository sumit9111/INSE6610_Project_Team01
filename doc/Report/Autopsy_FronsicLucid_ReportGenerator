We created a report module for Autopsy Forensic Tool which is useful for encoding digital evidences in Forensic Lucid. The module was integrated in Autopsy to generate a report for our case. Autopsy is written in Java and provides an extension mechanism called modules. A module can be considered as a plugin to externally enhance the target application [1]. Autopsy is comprised of the following modules and reports [2]:
•	Ingest Modules: These modules are run when a new data source (such as a disk image) is added to a case (and can be re-run afterwards too). 
•	Report Modules: These modules are (typically) run after the user has reviewed results and tagged files. Their intention is to create an output report of the results, but they can also be used to perform analysis. 
•	Content Viewers: These modules are graphical and focus on displaying a specific file in some unique way. These are the modules in the lower right of the interface. The platform comes with viewers to view the file in hexadecimal, extract the strings from the file, and view images and movies.
•	Result Viewers: These modules show information about a set of files. These modules are in the upper right of the interface. The platform comes with viewers to view the set of files in a table and thumbnails. 
According to the developer’s guide [2] we can write just ingest and report modules in Python language for the rest it must be java.
Every Python module in Autopsy gets its own folder. This reduces naming collisions between modules. By launching Autopsy and choose the Tools -> Python Plugins menu item. That will open a folder in AppData folder, such as "C:\Users\JDoe\AppData\Roaming\Autopsy \python_modules"[3].we made a folder inside of there to store our module in Figure 1 and Figure 2.
